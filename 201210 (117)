1.상속을 UML로 표기해 보세요.


2.부모클래스와 자식클래스의 다른 용어들은?
 - 부모 클래스 = 상위 클래스(super class) = 기초 클래스
 - 자식 클래스 = 하위 클래스(sub class) = 유도 클래스 = 파생 클래스



3.super 키워드와 this 키워드의 차이는 무엇인가요?
 - super(); : 상위 클래스 생성자 호출
 - this(); : 생성자를 오버로딩했을 때, 같은 이름의 다른 파라미터를 가진 생성자를 호출하는 키워드.
             (= 생성자가 속한 "이 인스턴스의" 다른 생성자 호출)



4.단일 상속과 다중상속 이란?
 - 단일 상속 : 하위 클래스가 상위 클래스 하나를 상속한 형태.
 - 다중 상속 : 하위 클래스 하나가 여러 상위 클래스를 상속한 형태
   → 자바에서는 다중 상속을 지원하지 x.
   → 상속 호출 키워드인 extends로는 하나의 클래스만 상속할 수 있음. 
      (ex. class C extends A, B { }      ( X ) )




5.다음 코드와 같이 과목과 점수가 짝을 이루도록 2개의 배열을 작성하라.

String course[] = {"Java", "C++", "HTML5", "컴퓨터구조", "안드로이드"};
int score[]  = {95, 88, 76, 62, 55};
그리고 다음 예시와 같이 과목 이름을 입력받아 점수를 출력하는 프로그램을 작성하라. "그만"을 입력받으면 종료한다. (Java는 인덱스 0에 있으므로 score[0]을 출력)

과목 이름 >> Jaba
없는 과목입니다.
과목 이름 >> Java
Java의 점수는 95
과목 이름 >> 안드로이드
안드로이드의 점수는 55
과목 이름 >> 그만
[Hint] 문자열을 비교하기 위해서는 String 클래스의 equals()메소드를 이용해야 한다.

String name;
if(course[i].equals(name)) {
    int n = score[i];
    ...
}
=========================================================
package inheritance_assign;

import java.util.Scanner;
public class ClassArr {
	private String[] course = {"Java", "C++", "HTML5", "컴퓨터구조", "안드로이드"};
	private int[] score = {95, 88, 76, 62, 55}; 
	
	ClassArr(){
		
	}

	public void getScore() {
		Scanner scanner;
		int i = 0;
		
		while(true) {
			scanner = new Scanner(System.in);
			
			System.out.print("과목 이름 : ");
			String inputCs = scanner.next();
			
			if(inputCs.equals("그만"))
				break;
			
			for(i = 0; i < course.length; i++) {
				if(course[i].equals(inputCs)) {
					System.out.println(course[i] + "의 점수는 " + score[i] + "점");
					
				}else if(inputCs.equals("그만")) {				
					System.out.println("프로그램을 종료합니다.");
					break;
				}
			}										
			if(i == course.length) {				
				System.out.println("없는 과목입니다.");	
			}
		}
	}
}
----------------------------------------------------------------------------------------------------------------
package inheritance_assign;

public class ClassArrMain {
	public static void main(String[] args) {
		ClassArr ca = new ClassArr();
		
		ca.getScore();
	}

}






6.다음은 2차원 상의 한 점을 표현하는 Point 클래스이다.

class Point {
   private int x, y;
   public Point(int x, int y) { this.x = x; this.y = y; }
   public int getX() { return x; }
   public int getY() { return y; }
   protected void move(int x, int y) { this.x =x; this.y = y; }
}


Point를 상속받아 색을 가진 점을 나타내는 ColorPoint 클래스를 작성하라. 다음 main() 메소드를 포함하고
 실행 결과와 같이 출력되게 하라.

public static void main(String[] args) {
   ColorPoint cp = new ColorPoint(5, 5, "YELLOW");
   cp.setXY(10, 20);
   cp.setColor("RED");
   String str = cp.toString();
   System.out.println(str+"입니다. ");
}

=======================
RED색의 (10,20)의 점입니다. 

=====================================================================
package inheritance_assign;

public class ColorPoint extends Point{
	private String color;
	
	public ColorPoint(int x, int y, String color){
		super(x, y);
		this.color = color;
	}
	
	public void setXY(int x, int y) {
		super.move(x, y);
	}
	
	public void setColor(String color) {
		this.color = color;
	}
	
	public String toString() {
		return color + "색의 " + "(" + super.getX() + ", " + super.getY() + ")" + "의 점";
	}
}
-----------------------------------------------------------------------------------------------------------------
package inheritance_assign;

public class ColorPointMain {
	public static void main(String[] args) {
	   ColorPoint cp = new ColorPoint(5, 5, "YELLOW");
	   cp.setXY(10, 20);
	   cp.setColor("RED");
	   String str = cp.toString();
	   System.out.println(str+"입니다. ");
	}
}







7.Point를 상속받아 색을 가진 점을 나타내는 ColorPoint1 클래스를 작성하라. 다음 main() 메소드를 포함하고
 실행 결과와 같이 출력되게 하라.

public static void main(String[] args) {
   ColorPoint1 zeroPoint = new ColorPoint1(); // (0,0) 위치의 BLACK 색 점
   System.out.println(zeroPoint.toString() + "입니다.");
   ColorPoint1 cp = new ColorPoint1(10, 10); // (10,10) 위치의 BLACK 색 점
   cp.setXY(5,5);
   cp.setColor("RED");
   System.out.println(cp.toString()+"입니다.");
}
=========================
BLACK색의 (0,0) 점입니다.
RED색의 (5,5) 점입니다.

=================================================================
package inheritance_assign;

public class ColorPoint1 extends Point{
	private String color;
	
	public ColorPoint1() {
		super(0, 0);
		this.color = "Black";
	}
	
	public ColorPoint1(int x, int y) {
		super(x, y);
	}
	
	public void setXY(int x, int y) {
		super.move(x, y);
	}
	
	public void setColor(String color) {
		this.color = color;
	}
	
	public String toString() {
		return color + "색의 " + "(" + super.getX() + ", " + super.getY() + ")" + "점";
	}
}
--------------------------------------------------------------------------------------------------------------
package inheritance_assign;

public class ColorPoint1Main {
	public static void main(String[] args) {
	   ColorPoint1 zeroPoint = new ColorPoint1(); // (0,0) 위치의 BLACK 색 점
	   System.out.println(zeroPoint.toString() + "입니다.");
	   
	   ColorPoint1 cp = new ColorPoint1(10, 10); // (10,10) 위치의 BLACK 색 점
	   cp.setXY(5,5);
	   cp.setColor("RED");
	   System.out.println(cp.toString()+"입니다.");
	}
}







8.Point를 상속받아 3차원의 점을 나타내는 Point3D 클래스를 작성하라. 다음 main() 메소드를 포함하고
 실행 결과와 같이 출력되게 하라.

public static void main(String[] args) {
   Point3D p = new Point3D(1,2,3); // 1,2,3은 각각 x, y, z축의 값.
   System.out.println(p.toString()+"입니다.");
   p.moveUp(); // z 축으로 위쪽 이동
   System.out.println(p.toString()+"입니다.");
   p.moveDown(); // z 축으로 아래쪽 이동
   p.move(10, 10); // x, y 축으로 이동
   System.out.println(p.toString()+"입니다.");
   p.move(100,  200, 300); // x, y, z축으로 이동
   System.out.println(p.toString()+"입니다.");
}
(1,2,3) 의 점입니다.
(1,2,4) 의 점입니다.
(10,10,3) 의 점입니다.
(100,200,300) 의 점입니다.

================================================================
package inheritance_assign;

public class Point3D extends Point {
	private int z;
	
	public Point3D(int x, int y, int z) {
		super(x, y);
		this.z = z;
	}
	
	
	public void moveUp() {
		this.z += 1;
	}
	
	public void moveDown() {
		this.z -= 1;
	}
	
	public void move(int x, int y, int z) {
		super.move(x, y);
		this.z = z;
	}
	
	public String toString() {
		return "(" + super.getX() + ", " + super.getY() + ", " + z + ")" + "의 점";
	}
}
--------------------------------------------------------------------------------------------------------------
package inheritance_assign;

public class Point3DMain {
	public static void main(String[] args) {
		   Point3D p = new Point3D(1,2,3); // 1,2,3은 각각 x, y, z축의 값.
		   System.out.println(p.toString()+"입니다.");
		   p.moveUp(); // z 축으로 위쪽 이동
		   System.out.println(p.toString()+"입니다.");
		   p.moveDown(); // z 축으로 아래쪽 이동
		   p.move(10, 10); // x, y 축으로 이동
		   System.out.println(p.toString()+"입니다.");
		   p.move(100,  200, 300); // x, y, z축으로 이동
		   System.out.println(p.toString()+"입니다.");
	}
}









9.배열을 이용하여 간단한 극장 예약 시스템을 작성하여 보자.

아주 작은 극장이라서 좌석이 10개 밖에 되지 않는다.

사용자가 예약을 하려고 하면 먼저 좌석 배치표를 보여준다.

즉, 예약이 끝난 좌석은 1로, 예약이 되지 않은 좌석은 0으로 나타낸다.
=========
출력
--------------------
0 1 2 3 4 5 6 7 8 9
--------------------
0 0 0 0 0 0 0 0 0 0

몇번째 좌석을 예약 하시겠습니까? 2
--------------------
0 1 2 3 4 5 6 7 8 9
--------------------
0 0 1 0 0 0 0 0 0 0

===========================================================
package inheritance_assign;

import java.util.Scanner;

public class Movie {
	private int[] seatNum = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9};
	private int[] seatChoice = new int[10];
	
	public Movie() {
	}
	
	public void getSeat() {
		int i;
		int j;
		
		do{
			System.out.println("----------------------");
			for(i = 0; i < seatNum.length; i++) {
					System.out.print(seatNum[i] + " ");
			}
			
			System.out.println();
			System.out.println("----------------------");
			
			for(j = 0; j < seatChoice.length; j++) {
				System.out.print(seatChoice[j] + " ");
			}
			
			if((i >= seatNum.length) && (j >= seatChoice.length)) {
				i = 0;
				j = 0;
			}
						
			Scanner sc;
			sc = new Scanner(System.in);
			
			System.out.println();
			System.out.println();
			System.out.print("몇 번째 좌석을 예약하시겠습니까? ");
			
			int num = sc.nextInt();
			
			//if(seatNum[i] == num) {				// 필요 없음
				seatChoice[num] = 1;
			//}
			
		} while(true);
	}
}
----------------------------------------------------------------------------------------------------------------------------
package inheritance_assign;

public class MovieMain {
	public static void main(String[] args) {
		Movie mv = new Movie();

		mv.getSeat();
	}
}
