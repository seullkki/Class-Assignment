1.생성자란 무엇인가?
 - 생성자의 형태 : 클래스 이름과 똑같음
 - 생성자의 용도 : 객체를 만들 때 사용 (new 뒤의 메소드 = 생성자 메소드)
 - 생성자 특징 ① 생성자 이름 = 클래스 이름
                    ② 리턴 타입이 없음 = 리턴값이 없음
                        (Q. 리턴 타입이 없는 이유?
	           A. 함수의 용도를 제한하기 위해서.
                             리턴값이 올 수 있다면, 리턴값에 따른 여러 리턴 타입이 올 수 있는데
                             그것을 막아서 사용에 제한을 둠.
                              → 생성자 함수는 연산을 위한 함수가 아니고 "초기화" 용도로 사용할 것이므로, 
             		     리턴 타입을 주지 X)


2.디폴트 생성자란 무엇인가?
 - 객체를 생성할 때, 직접 생성자를 만들지 않았는데도 에러가 나지 않는 이유 = 디폴트 생성자 때문.
 - 컴파일러는 자동으로 기본 생성자를 삽입해주는데, 이것을 '디폴트 생성자'라고 함.
 - 형태 : public 클래스 이름( ) { // 내용 없음 }


3.생성자의 용도에 대하여 설명하시오.
 - 생성자는 객체를 만들 때 사용하는데, 연산이 아닌 인스턴스 변수의 "초기화" 용도로 사용할 수 있음.


4.null 에 대하여 설명하시오.
 - null을 참조형을 데이터 타입으로 받는 참조 변수에 대입하면, 변수는 null로 초기화 됨.
 - 변수가 참조하는 인스턴스와의 관계를 끊는다는 의미.
   = 변수에 주소가 없는 상태 = 객체가 생성되지 않은 상태 = 객체가 없는 상태
 - null은 참조형 변수를 초기화할 때 사용하는 것이므로, 기본 8개 데이터 타입에는 사용할 수 x.
 - 참조 변수를 null로 초기화하는 것은 "null 체크"라고 함.
 - 참조 변수를 함수의 매개 변수로 사용할 때는, 반드시 null 체크 해야 함.



5.금일 프로그래밍 했던 문제
========================================
자바 클래스를 작성하는 연습을 해보자. 다음 main() 메소드를 실행하였을 때 예시와 같이 출력되도록 TV 클래스를 작성하라.

public static void main(String[] args) {
   TV myTV = new TV("LG", 2017, 32); //LG에서 만든 2017년 32인치
   myTV.show();
}
LG에서 만든 2017년형 32인치 TV
-----------------------------------------------------------------------------
public class TV {
	String brand;
	int year;
	int size;
	
	public TV(String brand, int year, int size) {
		this.brand = brand;
		this.size = size;
		this.year = year;
	}
	
	public void show() {
		System.out.println(brand + "에서 만든 " + year + "년형 " + size + "인치 TV" );
	}

	public String getBrand() {
		return brand;
	}

	public void setBrand(String brand) {
		this.brand = brand;
	}

	public int getYear() {
		return year;
	}

	public void setYear(int year) {
		this.year = year;
	}

	public int getSize() {
		return size;
	}

	public void setSize(int size) {
		this.size = size;
	}
	
}
----------------------------------------------------------------------------
public class TvResult {
	public static void main(String[] args) {
		TV myTV = new TV("LG", 2017, 32);
	
		myTV.show();
	}
}


==========================================
		int math, science, english;
		math = 90;
		science = 100; 
		english = 80;
		
		Grade me = new Grade(math, science, english);
		System.out.println("평균은 " + me.average());
-----------------------------------------------------------------------------
public class Grade {
	double math;
	double science;
	double eng;
	
	public Grade(double math, double science, double eng) {
		this.math = math;
		this.eng = eng;
		this.science = science;
	}
	
	public double getMath() {
		return math;
	}

	
	public void setMath(double math) {
		this.math = math;
	}


	public double getScience() {
		return science;
	}


	public void setScience(double science) {
		this.science = science;
	}


	public double getEng() {
		return eng;
	}


	public void setEng(double eng) {
		this.eng = eng;
	}
	
	public double getSum() {
		return math + science + eng;
	}

	public double average() {
		return getSum() / 3.0;
	}
-----------------------------------------------------------------------------
public class Grademain {
	public static void main(String[] args) {
		Grade me = new Grade(math, science, english);

		System.out.println("평균은 " + me.average());
	}
}


============================================
6. 노래 한 곡을 나타내는 Song 클래스를 작성하라. Song은 다음 필드로 구성된다.

- 노래의 제목을 나타내는 title
- 가수를 나타내는 artist
- 노래가 발표된 연도를 나타내는 year
- 국적을 나타내는 country

또한 Song 클래스에 다음 생성자와 메소드를 작성하라.
- 생성자 2개: 기본 생성자와 매개변수로 모든 필드를 초기화하는 생성자
- 노래 정보를 출력하는 show() 메소드
- main() 메소드에서는 1978년, 스웨덴 국적의 ABBA가 부른 "Dancing Queen"을
song 객체로 생성하고 show()를 이용하여 노래의 정보를 다음과 같이 출력하라.
-----------------------------------------------------------------------------------------
public class Song {
	int year;
	String country; 
	String artist;
	String title;
	
	public Song(int year, String country, String artist, String title) {
		this.year = year;
		this.country = country;
		this.artist = artist;
		this.title = title;
	}
	
	public void show() {
		System.out.println(year + "년 " + country + " 국적의 " + artist + "가 부른 " +  title);
	}

	public int getYear() {
		return year;
	}

	public void setYear(int year) {
		this.year = year;
	}

	public String getCountry() {
		return country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	public String getArtist() {
		return artist;
	}

	public void setArtist(String artist) {
		this.artist = artist;
	}

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}
}
-----------------------------------------------------------------------------------------
public class SongResult {

	public static void main(String[] args) {
		Song song = new Song(1978, "스웨덴", "ABBA", "Dancing Queen");
		
		song.show();
	}
}


===============================================
아래와 같이 성적을 연속적으로 입력 받고 평균을 내는  프로그램을 작성하시오.

국어 영어 수학을 입력하세요!
100 60 70
평균은 76.66666666666667
계속 하시겠습니까
y
국어 영어 수학을 입력하세요!
90 80 70
평균은 80.0
계속 하시겠습니까
n
프로그램 종료 입니다.
-----------------------------------------------------------------------------------------
public class Grade{
	double math;
	double science;
	double eng;
	
	public Grade(double math, double science, double eng) {
		this.math = math;
		this.eng = eng;
		this.science = science;
	}
	
	public double getMath() {
		return math;
	}

	
	public void setMath(double math) {
		this.math = math;
	}


	public double getScience() {
		return science;
	}


	public void setScience(double science) {
		this.science = science;
	}


	public double getEng() {
		return eng;
	}


	public void setEng(double eng) {
		this.eng = eng;
	}
	
	public double getSum() {
		return math + science + eng;
	}

	public double average() {
		return getSum() / 3.0;
	}
	

}
-----------------------------------------------------------------------------------------
import java.util.Scanner;
public class GradeMain{
	public static void main(String[] args){
		while(true){
			Scanner scanner = new Scanner(System.in);
		
			int kor = scanner.nextInt();
			int eng = scanner.nextInt();
			int math = scanner.nextInt();

			Grade grade = new Grade(kor, eng, math);

			System.out.println("평균은 " + grade.average());
			System.out.println("계속 하시겠습니까? Y/N ");

			String answer = scanner.next();

			if(answer.equals("Y") || answer.equals("y")){
				continue;
			}else{
				System.out.println("프로그램을 종료합니다");
				break;
			}
		}
	}
}


==============================================
7. 아래의 프로그램을 작성하시오.
화폐 매수 구하기

출력
---------------------------------
136000
오만원 : 2장
만원 : 3장
오천원 : 1장
천원 : 1장
오백원 : 0개
백원 : 0개
계속 하시겠습니까
y
1456000
오만원 : 29장
만원 : 0장
오천원 : 1장
천원 : 1장
오백원 : 0개
백원 : 0개
계속 하시겠습니까
---------------------------------------------------------------------
package java_rec;

public class Calculator {
	int som;
	int unit500;
	int unit100;
	int unit50;
	int unit10;
	int unit5;
	int unit1;
	
	public Calculator(int som) {
		this.som = som;
	}
	
	

	public void calcu() {
		if((som / 50000) > 0) {
			System.out.println("오만원 : " + (som / 50000) + "장");
		}
		if((som % 50000) / 10000 > 0) {
			System.out.println("만원 : " + ((som % 50000) / 10000) + "장");
		}
		if(((som % 50000) % 10000) / 5000 > 0){
			System.out.println("오천원 : " + ((som % 50000) % 10000) / 5000  + "장");
		}
		if((((som % 50000) % 10000) % 5000) / 1000 > 0) {
			System.out.println("천원 : " + ((((som % 50000) % 10000) % 5000) / 1000)  + "장");
		}
		if(((((som % 50000) % 10000) % 5000) % 1000) / 500 > 0) {
			System.out.println("오백원 : " + (((((som % 50000) % 10000) % 5000) % 1000) / 500) + "장");
		}if((((((som % 50000) % 10000) % 5000) % 1000) % 500) / 100 > 0 ) {
			System.out.println("백원 : " + ((((((som % 50000) % 10000) % 5000) % 1000) / 500) / 100) + "장");
		}
	}

}
-----------------------------------------------------------------------------------------------
package java_rec;

import java.util.Scanner;
public class CalculatorResult {

	public static void main(String[] args) {
		
		while(true) {
			Scanner scanner = new Scanner(System.in);
			
			System.out.println("계산할 금액을 입력하세요");
			
			int som = scanner.nextInt();
			
			Calculator cal = new Calculator(som);
			
			cal.calcu();
			
			System.out.println("계속 하시겠습니까? Y/N");
			
			String answer = scanner.next();
			
			if(answer.charAt(0) == 'y' || answer.charAt(0) == 'Y') {
				continue;
			}else {
				System.out.println("프로그램이 종료되었습니다");
				break;
			}
			
		}
	}
}
===============================================================================



8.자바의 명명 규칙에 대하여 설명하시오.
-클래스 : 첫 글자 "대문자" / 합성어는 첫 글자 "대문자" (낙타등 표기법)
-메소드와 변수 : 첫 글자 "소문자" / 합성어는 첫 글자 "대문자" (낙타등 표기법)
-상수 : 모든 글자 "대문자" / 합성어는 _ 로 연결 (뱀 표기법)
-camel case : 합성어를 만들 때, 합성어의 첫 글자를 대문자로 표기하는 방법
-snake case : 합성어를 만들 때, 각 합성어를 _ 로 연결하는 방법
