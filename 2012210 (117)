1.배열의 디폴트 초기화 방법은?
 - 배열의 형태 : 데이터 타입 [] + 변수이름 = new 데이터 타입[배열에 들어갈 데이터 길이];
                -------------------------   -----------------------------------------
                              ↓                                             ↓
                         배열 선언                                  배열 생성

 - 이렇게 만든 배열은 명시한 데이터 길이 만큼 값이 들어갈 수 있지만, 아직 초기화를 하지 않은 상태임.
 - 초기화를 하지 않은 상태에서는 컴파일러가 기본값을 넣어주는데, 참조형은 'null' / 다른 데이터 타입은 '0'이 기본값.
 - 초기화 방법 : 데이터 타입[] + 변수이름 = new 데이터 타입[] {데이터 타입이 일치하는 값, 값, ....}; 
                   → 이때는 배열 생성 부분 [ ] 에 데이터 길이를 직접 명시하지 x.
                     입력한 값의 크기 만큼 컴파일러가 입력해줌.

 


2.arraycopy 함수의 사용 방법은?
 - 형태 : System.arraycopy( 배열①, 값 1, 배열 ②, 값 2, 개수);
            → 의미 : 배열①의 데이터 중 인덱스 '값1'번부터 '개수'만큼을 배열 ②의 인덱스 '값2'번부터 넣음.
 - arraycopy는 System 클래스를 통해 접근 가능한 static 메소드




3.public static void main(String[] args) 에서 String[] args 의 사용법과 용도는?
 - public : 어디서든 접근 가능한 메소드 (보통 외부에서 main 메소드를 호출하므로, 그것을 나타내는 '약속')
 - static : 클래스 메소드
 - void : 리턴값이 없음
 - (String[] args) : main 메소드의 매개변수로 'args'라는 이름의 문자열로 된 배열을 받는 참조변수가 온 것.

 - 용도 : 실행하고자 하는 코드를 실행시키기 위한 메소드
 - 사용법 : main 메소드가 있는 클래스를 컴파일한 후 이 클래스 파일을 실행할 때, 매개 변수 자리에 원하는 값을
               입력하면 이 값들이 배열로 생성되어 차례대로 출력됨. (for문을 써서 출력하는 경우)
               → ex. 
                        class simple{
                          public static void main(String[] args){
                            for(int i = 0; i < args.length; i++){
                              System.out.println(args[i]);
                            }
                          }
                        }
                        
                              ↓
                              
                          simple 파일을 컴파일 해서 (javac simple.java) 실행할 때 (java simple)
                          원하는 값을 입력하면 (java simple coffee milk)
                          String[] args = new String[] {coffee, milk}; 가 되면서
                          ---------
                          coffee
                          milk
                          ---------
                          이렇게 값이 출력됨.




4.enhenced for 문에 대하여 설명하시오.
 - 배열은 반드시 for문을 함께 쓸 수밖에 없음. (배열의 데이터를 출력하기 위해)
 - 그래서 배열과 for문을 합쳐 '더 강화된' for문을 만든 것이 'enhanced for문'
 - 형태 : for( 배열의 데이터 타입 + e  :  배열 이름) {
	                 System.out.println(e);
          }
 - 원리 : 배열에 들어 있는 값을 첫 번째부터 하나씩  e에 저장한 후 출력




5.로또 프로그램을 작성하시오.

public class Practice1Lotto {
	private int[] lotto;
	
	Practice1Lotto(){
		
	}


	private int[] printLotto() {
		int[] lotto = new int[6];
		
		for(int i = 0; i < lotto.length; i++) {			
			lotto[i] = (int)(Math.random() * 45 + 1);
			
			for(int j = 0; j < i; j++) {
				if(lotto[i] == lotto[j]) {
					i--;
					break;
				}
			}
		}
		return lotto;
	}
	
	public void printResult() {
		lotto = printLotto();
		
		for(int i = 0; i < lotto.length; i++) {
			System.out.print(lotto[i] + " ");
		}
	}
}

------------------------------------------------------------------------------------------
package array_assign;

public class Practice1LottoMain {
	public static void main(String[] args) {
		Practice1Lotto lo = new Practice1Lotto();
		
		lo.printResult();
	}
}




6.아래의 프로그램을 참고 하여 Box class 를 짜시오.
	public static void main(String[] args) {
		Box[] ar = new Box[5];
		ar[0] = new Box(101, "Coffee");
		ar[1] = new Box(202, "Computer");
		ar[2] = new Box(303, "Apple");
		ar[3] = new Box(404, "Dress");
		ar[4] = new Box(505, "Fairy-tale book");

		for (Box e : ar) {
			if (e.getBoxNum() == 505)
				System.out.println(e);
		}

	}
-------------------------------------------------------------------------
public class Box {	
	private int num;
	private String name;
	
	Box(int num, String name){
		this.name = name;
		this.num = num;
	}
	
	public int getBoxNum() {
		return num; 
	}
	
	public String toString() {	
		return name;
	}
}





7.양의 정수 10개를 랜덤생성하여, 배열에 저장하고, 배열에 있는 정수 중에서 3의 배수만 출력해보자.
package array_assign;

public class PossitiveInt {
	int[] possinum;
	int[] num = new int[10];
	
	PossitiveInt(){
		
	}
	
	
	
	public int[] getPossinum() {
		return possinum;
	}



	public void setPossinum(int[] possinum) {
		this.possinum = possinum;
	}



	public int[] getNum() {
		return num;
	}



	public void setNum(int[] num) {
		this.num = num;
	}



	private int[] printNum() {
		for(int i = 0; i < num.length; i++) {
			num[i] = (int)(Math.random() * 1000000 + 1);
		}
		return num;
	}
	
	public void printResult() {
		possinum = printNum();
		
		for(int i = 0; i < possinum.length; i++) {
			if((num[i] % 3) == 0) {
				System.out.println("배열 내 3의 배수는: " + num[i]);
			}
		}
	}
}
-----------------------------------------------------------------------------------------------
package array_assign;

public class PossitiveIntMain {
	public static void main(String[] args) {
		PossitiveInt po = new PossitiveInt();
		
		po.printResult();
	}
}




8.아래의 프로그램을 짜시오.(필수)
-5개의 숫자를 랜덤으로 받아 배열로 저장
-5개의 숫자중 가장 큰값을 출력

package array_assign;

import java.util.Random;

public class MaxNum {
	private int[] random = new int[5];
	private int[] r;
	
	private int[] printRandom() {
		Random r = new Random();
		
		for(int i = 0; i < random.length; i++) {
			random[i] = r.nextInt(1000) + 1;
		}
		
		return random;
	}
	
	public void printMax() {
		 r = printRandom();
		 int max = random[0];
		
		for(int i = 0; i < random.length; i++) {
			for(int j = 0; j < i; j++) {
				if(random[i] > max) {
					max = random[i];
				}
			}
		}
		System.out.println("최대값은 " + max);
	}
}
------------------------------------------------------------------------------------
package array_assign;

public class MaxNumMain {
	public static void main(String[] args) {
		MaxNum max = new MaxNum();
		
		max.printMax();
	}
}




9.아래의 프로그램을 짜시오.
-5개의 숫자를 랜덤으로 받아 배열로 저장
-5개의 숫자를 내림차순으로 정렬하여 출력

package array_assign;

import java.util.Random;

public class Descending {
	private int[] random = new int[5];
	
	Descending(){
		
	}
	
	private int[] printRandom() {
		Random r = new Random();
		
		for(int i = 0; i < random.length; i++) {
			random[i] = r.nextInt(1000) + 1;
		}
		
		return random;
	}
	
	private void printDescending() {
		printRandom();
		int temp = 0;
		
		for(int i = 0; i < random.length; i++) {
			for(int j = i + 1; j < random.length; j++) {
				if(random[i] < random[j]) {
					temp = random[i];
					random[i] = random[j];
					random[j] = temp;
				}
			}
		}
	}
	
	public void result() {
		printDescending();
		
		for(int i = 0; i < random.length; i++) {
			System.out.println(random[i]);
		}
	}
}

-------------------------------------------------------------------------------------------------
package array_assign;

public class DescendingMain {
	public static void main(String[] args) {
		Descending des = new Descending();
		
		des.result();
	}
}



10. char 배열을 생성하여, 알파벳 A~Z까지 대입 후, 출력해보자. 알파벳은 26개.

package array_assign;

public class CharArray {	
	private char[] ch = new char[26];
	
	CharArray(){
		
	}
	
	private char[] printAlpha() {
		for(int i = 0; i < ch.length; i++) {
			ch[i] = (char)('A' + i); 
		}
		return ch;
	}
	
	public void result() {
		printAlpha();
		
		for(int i = 0; i < ch.length; i++) {
			System.out.println(ch[i]);
		}
	}
}
-------------------------------------------------------------------------------------------------
package array_assign;

public class CharArrayMain {
	public static void main(String[] args) {
		CharArray ca = new CharArray();
		
		ca.result();
	}
}





11.배열과 반복문을 이용하여 프로그램을 하시오. 키보드에서 정수로 된 돈의 액수를 입력받아 
오만 원권, 만 원권, 천 원권, 500원짜리 동전, 100원짜리 동전, 50원짜리 동전, 10원짜리 동전, 1원짜리 동전이 
각 몇 개로 변환되는지 예시와 같이 출력하라. 이때 반드시 다음 배열을 이용하고 반복문으로 작성하라.

int[] unit = {50000, 10000, 1000, 500, 100, 50, 10, 1}; // 환산할 돈의 종류

금액을 입력하시오 >> 65123
50000 원 짜리 : 1개 
10000 원 짜리 : 1개 
1000 원 짜리 : 5개 
500 원 짜리 : 0개 
100 원 짜리 : 1개 
50 원 짜리 : 0개 
10 원 짜리 : 2개 
1 원 짜리 : 3개 




12.정수를 10개 저장하는 배열을 만들고 1에서 10까지 범위의 정수를 랜덤하게 생성하여 배열에 저장하라. 
그리고 배열에 든 숫자들과 평균을 출력하라.(필수)

랜덤한 정수들 : 3 6 3 6 1 3 8 9 6 9 
평균은 5.4


package array_assign;

import java.util.Random;

public class RandomAvg {
	private int[] random = new int[10];
	private int[] avg;
	
	RandomAvg(){
		
	}
	
	private int[] printNum() {
		Random r = new Random();
		
		for(int i = 0; i < random.length; i++) {
			random[i] = r.nextInt(10) + 1;
		}
		
		return random;
	}
	
	private int printSum() {
		int sum = 0;
		
		for(int i = 0; i < random.length; i++) {
			sum += random[i];
		}
		
		return sum;
	}
	
	private double printAvg() {
		double average = printSum() / 10.0;
		return average;
	}
	
	public void result() {
		avg = printNum();
		
		System.out.print("출력 정수 : ");
		
		for(int i = 0; i < avg.length; i++) {
			System.out.print(avg[i] + " ");
		}
		
		System.out.println();
		System.out.println("평균 : " + printAvg());
	}
}
---------------------------------------------------------------------------
package array_assign;

public class RandomAvgMain {
	public static void main(String[] args) {
		RandomAvg avg = new RandomAvg();
		
		avg.result();
	}
}




13. 4 x 4의 2차원 배열을 만들고 이곳에 1에서 10까지 범위의 정수를 랜덤하게 생성하여 정수 16개를 배열에 저장하고,
 2차원 배열을 화면에 출력하라.(필수)

8 6 1 1 
7 3 6 9 
4 5 3 7 
9 6 3 1 


package array_assign;

import java.util.Random;

public class TwoArray {
	private int[][] bi = new int[4][4];
	
	TwoArray(){
		
	}
	
	private void printNum(){
		Random r = new Random();
		
		for(int i = 0; i < bi.length; i++) {
			for(int j = 0; j < bi[i].length; j++) {
				bi[i][j] = r.nextInt(10) + 1 ;
			}
		}
	}
	
	public void printResult() {
		printNum();
		
		for(int i = 0; i < bi.length; i++) {
			for(int j = 0; j < bi[i].length; j++) {
				System.out.print(bi[i][j] + " ");
			}
			System.out.println();
		}
	}
}
---------------------------------------------------------------------------------
package array_assign;

public class TwoArrayMain {
	public static void main(String[] args) {
		TwoArray bi = new TwoArray();
		
		bi.printResult();
	}
}




14.아래를 메모리 구조로 표현하시오.
int[][] arr = new int[3][4];
  → 2차원 배열
  → 앞의 [] 는 '행'의 길이를 의미, 뒤의 []는 '열'의 길이를 의미.
  → 정수형 데이터가 들어갈 수 있는 2차원 배열을 받는 변수 arr이 메모리에 올라가면,
      정수형 데이터가 들어갈 수 있는 3행 x 4열 형태의 배열 주소값이 arr을 가리키고 있는 형태.
