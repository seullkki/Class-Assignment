1.String 클래스에서 concat 메서드를 설명하시오.
 - 형태 : "문자열" . concat( "이어붙일 문자열") . concat(" 이어붙일 문자열") .... ;
 - 기능 : 문자열을 연결시켜줌
 - 그동안 println 메소드에서 + 를 이용해 문자열을 이어 붙여 출력했던 것은 사실 컴파일러가 + 를 concat 메소드로
    호출했기 때문.
 - concat 메소드로 만들어지는 문자열은 원래 문자열에 새 문자열이 추가되는 것이 아님.
   String은 immutable 인스턴스이므로, 새 문자열이 만들어질 때마다 새로운 인스턴스를 생성, 메모리가 할당됨.



2.str.substring(2, 4); substring 사용법에 대하여 설명하시오.
 - 기능 : 문자열의 일부를 추출
 - 형태 : 참조변수 . substring(추출한 문자열의 시작 인덱스, 마지막 인덱스);
	→ 주의점 : 여기서 마지막 인덱스 번호까지 문자열을 추출하는 것이 x.
		   마지막 인덱스 "이전까지"의 문자열을 추출해 출력.
	→ str.substring(2, 4);  :  입력한 문자열의 2번째부터 3번째까지 출력



3.st1.compareTo(st2);compareTo 사용법에 대하여 설명하시오.
 - 기능 : 두 문자열을 비교함
 - 형태 : 기준 문자열의 참조변수 . compareTo( 비교할 문자열의 참조변수 );
 - 특징 : 리턴값이 'int' / 사전에서 어떤 문자열이 더 먼저 오는지를 기준으로 값이 출력됨.
	→ 두 문자열을 비교해 기준 문자열과 비교 문자열이 일치하면 리턴값 ' 0 ' 출력
	→ 사전에서 기준 문자열이 비교 문자열보다 먼저 오면 리턴값은 '음수'
	→ 사전에서 기준 문자열이 비교 문자열보다 나중에 오면 리턴값은 '양수' 



4.String.valueOf 에 대하여 설명하시오.
 - 기능 : 기본 자료형(8가지)의 값을 문자열( " " )로 바꿔줌
 - 형태 : String.valueOf(기본 자료형/변수);
	→ 클래스를 통해 접근하는 모양을 보면 valueOf는 static 메소드임을 알 수 있음.
	→ valueOf에 여러 기본형을 "오버로드"했기 때문에 사용 가능
		static String valueOf(boolean b);
		static String valueOf(char c);
		static String valueOf(double d);
		static String valueOf(float f);
		static String valueOf(int i);
		static String valueOf(long l);



5. 아래의 연산과정에서 호출되는 함수(원리)를 써서 표현해 보세요.
String str = "age: " + 17;
 → 문자열을 데이터로 받는 참조 변수 str에는 문자열을 넣어야 하기 때문에 정수형 데이터인 17이 문자열로 바뀌어야 함.
 →  먼저 컴파일러는 valueOf 메소드로 정수형 데이터를 문자열로 만들고, concat 메소드로 둘을 연결해주게 됨.
 →  "age: " . concat(String.valueOf(17)); 이라는 과정을 거쳐 'age: 17'이 최종 출력됨.



6.StringBuilder 와 String 의 차이는?
 - String 클래스로 문자열을 이어 붙여 출력하기 위해 + 를 쓰면, String은 immutable 인스턴스이므로 +(concat)마다
   새 인스턴스를 생성하게 됨. = 문자열 결합이 최적화되지 않은 상태
 - StringBuilder 클래스는 String과 다르게 "mutable" 인스턴스이므로, StringBuilder 을 사용해서 문자열을 결합하면
   원래의 문자열이 있는 인스턴스에 새 값을 추가해주는 방향으로 문자열이 만들어짐. = 문자열 결합 최적화 상태
     → 메모리에 부담이 덜 하므로 속도가 빠름.
     → 방법 : StringBuilder 참조변수 . append(" 추가할 문자열 ");
     → 주의점 : append 메소드로 추가한 문자열은 println(StringBuilder 참조변수);로는 출력 x.
	        자바에 오버로드 되어 있지 않기 때문. 따라서 StringBuilder 참조변수.toString() 메소드를 써주어야 함.



7.String 을 이용하여 프로그래밍 하시오.
입력 : 990925-1012999
출력 : 990925 1012999
==========================================================
package string_assign;

import java.util.Scanner;

public class IdInput {
	//	입력 : 990925-1012999 (String 입력받기)
	//	출력 : 990925 1012999 (delete로 일부 문자열 지워서 출력)
	
	private String idnum;
	
	IdInput(){
	}
	
	
	
	public String getIdnum() {
		return idnum;
	}



	public void setIdnum(String idnum) {
		this.idnum = idnum;
	}



	private void input() {
		Scanner scanner;
		scanner = new Scanner(System.in);

		System.out.println("주민등록번호를 입력하세요(예 : 123456-1234567)");
		
		idnum = scanner.nextLine();
		
		scanner.close();
	}
	
	private void output() {
		System.out.println(idnum.substring(0, 6) + " " + idnum.substring(7, 14));
	}
	
	public void result() {
		input();
		output();
	}
}
--------------------------------------------------------------------------------------------------------
package string_assign;

public class IdInputMain {
	public static void main(String[] args) {
		IdInput id = new IdInput();
		
		id.result();
	}
}




8.아래의 메모리 그림을 그리시오.
int[] ar1 = new int[5];




9.아래를 프로그래밍 하시오.(단 클래스로 구성할것)
입력:lee sunkyo
출력:first name: lee second name:sunkyo
=========================================================
package string_assign;

import java.util.Scanner;

public class Name {
	private String name;
	
	Name(){
	}
	
	
	public String getName() {
		return name;
	}



	public void setName(String name) {
		this.name = name;
	}



	private void input() {
		Scanner scanner;
		scanner = new Scanner(System.in);
		
		System.out.println("영문 이름을 입력하세요(예 : lee sunkyo)");
		
		name = scanner.nextLine();
		
		scanner.close();
	}
	
	private void output() {
		String[] sp = name.split(" ");
		
		System.out.print("first name : " + sp[0] + ", ");
		System.out.println("last name : " + sp[1]);
	}
	
	public void Result() {
		input();
		output();
	}
}

---------------------------------------------------------------------------------------------------
package string_assign;

public class NameMain {

	public static void main(String[] args) {
		Name name = new Name();
		
		name.Result();
	}
}





10.아래를 프로그래밍 하시오.

입력 : 홍 길동 
출력 : 성 = 홍  이름 = 길동 

입력 : 홍길동 
출력 : 공백이 없군요. 다시 입력해주세요.
==============================================================
package string_assign;

import java.util.Scanner;

public class NameGap {
	private String name;
	
	NameGap(){
	}
	
	
	
	public String getName() {
		return name;
	}



	public void setName(String name) {
		this.name = name;
	}



	private void input() {
		Scanner scanner;
		
		while(true) {
			scanner = new Scanner(System.in);
			
			System.out.println("이름을 입력해주세요(예 : 홍 길동)");
			
			name = scanner.nextLine();
			
			if(name.contains(" ")) {
				output();
				System.out.println();
			}else
				System.out.println("공백이 없군요. 다시 입력해주세요.");
				System.out.println();
		}
	}
	
	private void output() {
		String[] sp = name.split(" ");
		System.out.print("성 : " + sp[0] + ", ");
		System.out.print("이름 : " + sp[1]);
	}
	
	public void Result() {
		input();
		output();
	}
}

------------------------------------------------------------------------------------------------------------------
package string_assign;

public class NameGapMain {
	public static void main(String[] args) {
		NameGap ng = new NameGap();
		
		ng.Result();
	}
}





11.아래를 프로그래밍 하시오.
"Hello.java" 문자열에서 파일명과 확장자인 java를 분리시키는 프로그램을 짜시오.

입력: Hello.java
출력: 파일이름은:Hello 이며 확장자는 java 입니다.

입력: Java.avi 
출력: 파일이름은:Java 이며 확장자는 avi 입니다.
==========================================================
package string_assign;

import java.util.Scanner;

public class FileName {
	private String file;
	
	FileName(){
	}

	
	public String getFile() {
		return file;
	}



	public void setFile(String file) {
		this.file = file;
	}



	private void input() {
		Scanner scanner;
		scanner = new Scanner(System.in);
		
		System.out.println("파일명과 확장자를 입력하세요(예 : calcu.hwp)");
		
		file = scanner.nextLine();
		
		scanner.close();
	}
	
	private void output() {
		String[] extension = file.split("\\.");
		System.out.println("파일 이름은 : " + extension[0] + "이며, 확장자는 : " + extension[1]);
	}
	
	public void Result() {
		input();
		output();
	}
}

--------------------------------------------------------------------------------------------------------------------
package string_assign;

public class FileNameMain {
	public static void main(String[] args) {
		FileName fn = new FileName();
		
		fn.Result();
	}
}





문제12. Scanner 클래스를 이용해서 한 줄 읽고, 공백으로 분리된 "단어"가 몇 개 들어 있는지 확인해보자.

   "그만"을 입력할 때까지 반복하는 프로그램이다.힌트(split 함수를 이용해 볼것)

예) 입력 : Java Programming 
출력 : 단어의 개수는 2
입력 : 자바 수업은 2층 C클래스 
출력 : 단어의 개수는 4
입력 : 그만 > 출력 : 프로그램 종료
==============================================================
package string_assign;

import java.util.Scanner;

public class CountWords {
	private String words;
	
	CountWords(){
	}
	
	
	public String getWords() {
		return words;
	}



	public void setWords(String words) {
		this.words = words;
	}



	private void input() {
		Scanner scanner;
		
		while(true) {
			scanner = new Scanner(System.in);
			
			System.out.println("단어를 입력하세요.");
			System.out.print("입력 : ");
			
			words = scanner.nextLine();
			
			if(words.equals("그만")) {
				System.out.println("프로그램 종료");
				break;
			}else {
				output();
				continue;
			}
		}
		scanner.close();
	}
	
	private void output() {
		String[] count = words.split(" ");
		System.out.println("출력 : 단어 개수는 " + count.length + "개");
		System.out.println("그만 하시려면 '그만'을 입력하세요.");
		System.out.println();
	}
	
	public void Result() {
		input();
		output();
	}
}
----------------------------------------------------------------------------------------------------
package string_assign;

public class CountWordsMain {
	public static void main(String[] args) {
		CountWords cw = new CountWords();
		
		cw.Result();
	}
}




